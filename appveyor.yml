environment:
  HOME: $(HOMEDRIVE)$(HOMEPATH)
  GOPATH: $(HOME)\go
  MY_PATH: $(GOPATH)\bin;C:\Python27\Scripts;$(HOME)\rebar
  MY_BUILD_DIR: $(appveyor_build_folder)\build
  MY_DIST_DIR: '%appveyor_build_folder%\${DIST_NAME}'
  ORIG_BUILD_FOLDER: ${appveyor_build_folder}
  DIST_NAME: dist-aaabbb
  PATH: 'C:\Ruby200\bin;%PATH%'

init:
- appveyor version

clone_folder: $(GOPATH)\src\site\org\project

test_script:
- ps: $ErrorActionPreference = "Stop"

- ps: Write-Host "Checking PATH"
- ps: Write-Host "$env:PATH"
- ps: 'if(-not $env:PATH.contains('C:\Ruby200\bin;')) { throw "PATH: does not contain C:\Ruby200\bin;"; }'

- ps: Write-Host "Checking HOME"
- ps: $expected_home = "C:\Users\appveyor"
- ps: 'if($env:home -ne $expected_home) { throw "HOME: $env:home, expected: $expected_home"; }'

- ps: Write-Host "Checking GOPATH"
- ps: $expected_GOPATH = "C:\Users\appveyor\go"
- ps: 'if($env:GOPATH -ne $expected_GOPATH) { throw "GOPATH: $env:GOPATH, expected: $expected_GOPATH"; }'

- ps: Write-Host "Checking MY_PATH"
- ps: $expected_MY_PATH = "C:\Users\appveyor\go\bin;C:\Python27\Scripts;C:\Users\appveyor\rebar"
- ps: 'if($env:MY_PATH -ne $expected_MY_PATH) { throw "MY_PATH: $env:MY_PATH, expected: $expected_MY_PATH"; }'

- ps: Write-Host "Checking appveyor_build_folder"
- ps: $expected_build_folder = "$env:gopath\src\site\org\project"
- ps: 'if($env:appveyor_build_folder -ne $expected_build_folder) { throw "appveyor_build_folder: $env:appveyor_build_folder, expected: $expected_build_folder"; }'

- ps: Write-Host "Checking MY_BUILD_DIR"
- ps: $expected_my_build_dir = "$env:appveyor_build_folder\build"
- ps: 'if($env:MY_BUILD_DIR -ne $expected_my_build_dir) { throw "MY_BUILD_DIR: $env:MY_BUILD_DIR, expected: $expected_my_build_dir"; }'

- ps: Write-Host "Checking MY_DIST_DIR"
- ps: $expected_my_dist_dir = "$env:appveyor_build_folder\dist-aaabbb"
- ps: 'if($env:MY_DIST_DIR -ne $expected_my_dist_dir) { throw "MY_DIST_DIR: $env:MY_DIST_DIR, expected: $expected_my_dist_dir"; }'

- ps: Write-Host "Checking ORIG_BUILD_FOLDER"
- ps: $expected_orig_build_folder = "$env:appveyor_build_folder"
- ps: 'if($env:ORIG_BUILD_FOLDER -ne $expected_orig_build_folder) { throw "ORIG_BUILD_FOLDER: $env:ORIG_BUILD_FOLDER, expected: $expected_orig_build_folder"; }'

build: off
